#!/bin/bash
# -*- coding: utf-8 -*-
#
#  usb-scanner
#  
#  Copyright 2019 Thomas Castleman <draugeros@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
VERSION="2.8.2"
if [ "$1" == "--version" ] || [ "$1" == "-v" ]; then
	echo -e "\n$VERSION\n"
	exit 0
fi
usb_loc="$HOME/.xboxdrv/usb.list"
mounted_loc="$HOME/.xboxdrv/mounted.list"
mounted=$(cat $mounted_loc)
custom_add=$(cat "$HOME/.xboxdrv/custom_add.list")
supported=$(cat "$HOME/.xboxdrv/supported.list")
edit="$HOME/.xboxdrv/edit.list"
#check for layout.conf file
if [ -f $HOME/.xboxdrv/layout.conf ]; then
	#parse and load file
	exit 2
else
	#set up default layout
	LEFTANALOG_X="KEY_A:KEY_D"
	LEFTANALOG_Y="KEY_W:KEY_S"
	RIGHTANALOG_X="REL_X:20"
	RIGHTANALOG_Y="REL_Y:20"
	LEFT_BUT="KEY_LEFTSHIFT"
	RIGHT_BUT="KEY_LEFTCTRL"
	LEFT_BUMP="KEY_Q"
	RIGHT_BUMP="KEY_E"
	LEFT_TRIG="BTN_RIGHT"
	RIGHT_TRIG="BTN_LEFT"
	A_BUT="KEY_SPACE"
	B_BUT="KEY_C"
	X_BUT="KEY_1"
	Y_BUT="KEY_R"
	HOME_BUT="void"
	START_BUT="KEY_ENTER"
	BACK_BUT="KEY_ESC"
	UP="BTN_MIDDLE"
	DOWN="KEY_TAB"
	LEFT="KEY_4"
	RIGHT="KEY_B"
fi

#scan usb devices and get list of Product:Vendor IDs (PVIDs)
scan () {
	sleep 0.1s
	usb=$(lsusb | sed -e 's/.*ID \([a-f0-9]\+:[a-f0-9]\+\).*/\1/g')
	rm $usb_loc
	echo "$usb" >> $usb_loc
}

#check $usb against $mounted to ensure nothing that has been mounted once gets mounted again
check_m () {
	for y in $usb; do
		sleep 0.1s
		echo $mounted | grep  -q -e "$y" && sed -i "/\b\($y\)\b/d" $usb_loc && usb=$(cat $usb_loc)
	done
}

support () {
	for y in $usb; do
		sleep 0.1s
		echo $supported | grep  -q -e "$y" && (pkexec xboxdrv --detach-kernel-driver &) && echo "$y" >> $mounted_loc && mounted=$(cat $mounted_loc)
	done
}

usupport () {
	for y in $usb; do
		sleep 0.1s
		echo "$custom_add" | grep  -q -e "$y" && (pkexec xboxdrv --detach-kernel-driver -s --device-name "Game Pad" --device-by-id "$y" --type xbox360 --deadzone 4000 --dpad-as-button --trigger-as-button --ui-axismap "x2=$RIGHTANALOG_X,y2=$RIGHTANALOG_Y,x1=$LEFTANALOG_X,y1=$LEFTANALOG_Y" --ui-buttonmap "tl=$LEFT_BUT,tr=$RIGHT_BUT" --ui-buttonmap "a=$A_BUT,b=$B_BUT,x=$X_BUT,y=$Y_BUT" --ui-buttonmap "lb=$LEFT_BUMP,rb=$RIGHT_BUMP" --ui-buttonmap "lt=$LEFT_TRIG,rt=$RIGHT_TRIG" --ui-buttonmap "dl=$LEFT,dr=$RIGHT,du=$UP,dd=$DOWN" --ui-buttonmap "back=$BACK_BUT,start=$START_BUT,guide=$HOME_BUT" &) && echo "$y" >> $mounted_loc && mounted=$(cat $mounted_loc)
	done
}

clear_m () {
	echo "$mounted" >> "$edit"
	for f in $mounted; do
		sleep 0.1s
		(echo "$usb" | grep  -q -e "$f") || sed -i "/\b\($f\)\b/d" $edit
	done
	mounted=$(cat $edit)
	rm "$edit"
}

clear_m_total () {
	rm $mounted_loc
	echo "0000:0000" >> $mounted_loc
}

inf=1
while [ "$inf" == "1" ]; do
	scan
	check_m
	support || usupport || clear_m_total
	clear_m
done
